<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <system.serviceModel>

    <services>
      <service name="System.ServiceModel.Routing.RoutingService">

        <!-- address where the routing service is running on -->
        <endpoint address="net.tcp://localhost:1000/DemoRouter"
                  binding="netTcpBinding"
                  contract="System.ServiceModel.Routing.IRequestReplyRouter"
                  name="router1"/>

        <!-- multicast musst be executed on different endpoint -->
        <endpoint address="net.tcp://localhost:2000/DemoRouterMulticast"
                  binding="netTcpBinding"
                  contract="System.ServiceModel.Routing.ISimplexDatagramRouter" />

      </service>
    </services>

    <client>

      <!-- address of client to route to (target host) -->
      <!-- contract is not important because it's "drive through"-->
      <endpoint address="net.tcp://localhost:1001/Process"
                binding="netTcpBinding"
                contract="*"
                name="ContractService1"/>
      <endpoint address="net.tcp://localhost:1002/Process"
                binding="netTcpBinding"
                contract="*"
                name="ContractService2" />
      <endpoint address="net.tcp://localhost:1003/Process"
                binding="netTcpBinding"
                contract="*"
                name="ContractService1_BackupService" />

    </client>

    <routing>

      <backupLists>
        <backupList name="Host1_FailoverBackupList">
          <add endpointName="ContractService1_BackupService" />
        </backupList>
      </backupLists>

      <filters>

        <!-- if the routing endpoint's name is 'router1' then go to this endpoint -->
        <filter name="filter1"
                filterType="EndpointName"
                filterData="router1"/>
        
        <!-- custom filter -->
        <filter name="myFilter"
                filterType="Custom"
                customType="Demo.CustomFilter.CustomContentFilter,Demo.CustomFilter"
                filterData="pingo"/>
        
        <!-- match all filter - failover -->
        <filter name="elseFilter"
                filterType="MatchAll"/>
        
        <!-- multicast filter -->
        <!-- http://pingo/multicast is the attribute of the IContract operation -->
        <filter name="broadcastFilter"
                filterType="Action"
                filterData="http://pingo/multicast"/>

      </filters>

      <filterTables>

        <!-- routing table settings (filters list) -->
        <filterTable name="demoRoutingTable1">
          <add filterName="filter1"
               endpointName="ContractService1"/>
        </filterTable>

        <!-- musst set priority because more then 1 endpoint targeted -->
        <!-- higher priority => executes before -->
        <filterTable name="demoRoutingTable2">
          
          <add filterName="myFilter"
               endpointName="ContractService1"
               priority="1"
               backupList="Host1_FailoverBackupList"/>
          
          <!-- only if 'myFilter' returns falase then 'filterElse' gets executed-->
          <add filterName="elseFilter"
               endpointName="ContractService2"
               priority="0"/>
          
          <!-- multicasting -->
          <!-- pay attention to priority - top priority is broadcasting first -->
          <add filterName="broadcastFilter" 
               endpointName="ContractService1" 
               priority="2"/>
          <add filterName="broadcastFilter"
               endpointName="ContractService2"
               priority="2"/>
          <add filterName="broadcastFilter"
               endpointName="ContractService1_BackupService"
               priority="2"/>
          
        </filterTable>

      </filterTables>

    </routing>

    <bindings>
      <netHttpBinding>
        <binding maxReceivedMessageSize="2000000"
                 sendTimeout="00:10:00" />
      </netHttpBinding>
    </bindings>

    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceDebug includeExceptionDetailInFaults="true"/>

          <!-- add routing table -->
          <routing filterTableName="demoRoutingTable2"/>

        </behavior>
      </serviceBehaviors>
    </behaviors>

  </system.serviceModel>

  <startup>
    <supportedRuntime version="v4.0"
                      sku=".NETFramework,Version=v4.5.2" />
  </startup>

</configuration>